slug: panorama-nia-cts
id: qy7hznc6pp3z
version: 0.0.8
title: Panorama MGMT PAN FW Network Infrastructure Automation with Consul-Terraform-Sync
  Workshop
teaser: Panorama Palo Alto Networks Next Generation Firewalls and Consul-Terraform-Sync
  Workshop
description: In this workshop you'll learn how to automate the provisioning and management
  of traditional network infrastructure using Terraform, Vault Consul, and Consul
  Terraform Sync. Eliminate exposure to operational overhead and security risk while
  accelerating the deployment and scaling of applications and services.
icon: https://raw.githubusercontent.com/hashicorp/field-workshops-consul/pan-azure-nia/instruqt-tracks/network-infrastructure-automation/assets/images/mainimage.png
tags:
- consul
- NIA
- cts
- terraform
owner: hashicorp
developers:
- sebastian.maniak@hashicorp.com
private: true
published: true
show_timer: true
challenges:
- slug: 01-overview
  id: ybccdrguppbx
  type: challenge
  title: Let's explore
  notes:
  - type: text
    contents: |
      Setting up your environment...

      Your Azure account will be ready in ~5 minutes. <br>

      Keep an eye on the bottom right corner to know when you can get started.
  - type: text
    contents: |
      The first thing we will start is to explore how PANORAMA was deployed <br>
  assignment: |-
    Let's explore the terraform code.

    Click on the Terraform Code, and take a look how we build
    - Dyanmic Address Groups
    - Network Address Translations (NATs)
    - Security Policies
  tabs:
  - title: Lab Overview
    type: website
    url: https://htmlpreview.github.io/?https://raw.githubusercontent.com/maniak-academy/instruqt-demos/blob/main/panorama-nia-cts/assets/images/env.html
  - title: Terraform Code
    type: code
    hostname: workstation
    path: /root/terraform/00-panorama-config
  - title: Cloud Consoles
    type: service
    hostname: workstation
    path: /
    port: 80
  difficulty: basic
  timelimit: 6000
- slug: 01-infra-cloud
  id: dxcmto90cg5c
  type: challenge
  title: Let's Start building..
  notes:
  - type: text
    contents: |
      The next challange we be will building out the Shared Infrastructure <br>

      Build <br>
       - Hashicorp Vault <br>
       - Hashicorp consul <br>
       - Logging Server <br>
       - Bastion Server <br>
  assignment: |-
    In this assignment you will start by installing Terraform

    In the Shell tab, execute the following command to install Terraform:

    ```
    apt-get install terraform
    ````

    The "Terraform Code" tab contains all of the Infrastructure as Code (IaC) templates used by Terraform to build the Infrastructure. Feel free to look over the code!

    Go to the 'Terraform Code' File explore and edit the 'terraform.tfvars' and put the username that was emailed to you.

    ```
    owner = "replaceme"
    ```

    Make sure to save the configuration (click on the save button)

    In the 'Shell' tab, deploy the Azure Infrastructure by running the following commands:

    ```
    cd terraform/01-infra-cloud/
    terraform init
    terraform plan
    terraform apply -auto-approve
    ```

    The following will be deployed:

      Azure VNets/Subnets/Routing
      Vault - Secrets Management
      Consul - Service Registry and Discovery (Source of truth)
      Bastion Server
      Logging Server

    With Consul being our Service Regisry and source of truth, we need to make sure that VAULT has successfuly been deployed.

    To get specific outputs, In the Shell tab, execute the following commands:

    CONSUL URL
    ```
    terraform output consullb
    ```

    VAULT URL [the token = root ]
    ```
    terraform output vaultlb
    ```
  tabs:
  - title: Lab Overview
    type: website
    url: https://htmlpreview.github.io/?https://raw.githubusercontent.com/maniak-academy/instruqt-demos/blob/main/panorama-nia-cts/assets/images/env.html
  - title: Terraform Code
    type: code
    hostname: workstation
    path: /root/terraform/01-infra-cloud
  - title: Shell
    type: terminal
    hostname: workstation
  - title: Cloud Consoles
    type: service
    hostname: workstation
    path: /
    port: 80
  difficulty: basic
  timelimit: 6000
- slug: 02-deploy-pan
  id: kvnahkqpcd3r
  type: challenge
  title: Deploy out Security Palo Alto Hub
  notes:
  - type: text
    contents: |+
      The next challange we will start by building out our Security Zone/HUB that will deploy our PAN OS firewalls.  <br>


      Process: When we hit the terraform apply
       1. Network/VNETS/Load Balancers/IPs will be deployed
       2. PANOS will be bootstrapped from the Panorama

      Note: The entire process takes about 10-12 min

  assignment: |-
    Let's deploy the PAN OS in our infrastructure


    In the 'Shell' tab, jump into the directory

    ```
    cd terraform/02-deploy-pan
    ```

    than, execute the following command to install Terraform:

    ```
    terraform init
    terraform plan
    terraform apply -auto-approve
    ```

    NOTE: To deploy the PANS it takes about 10 mintues.

    While, your waiting.. log into the Panorama https://20.118.98.21/

    When you log into the panorama click on 'PANORAMA > Managed Devices > Summary' your device will start to register and go through the process.

    When you see the status as "Connected" with a "commit sucessed" you can move onto deploying the apps.
  tabs:
  - title: Lab Overview
    type: website
    url: https://htmlpreview.github.io/?https://raw.githubusercontent.com/maniak-academy/instruqt-demos/blob/main/panorama-nia-cts/assets/images/env.html
  - title: Terraform Code
    type: code
    hostname: workstation
    path: /root/terraform/02-deploy-pan
  - title: Shell
    type: terminal
    hostname: workstation
  - title: Cloud Consoles
    type: service
    hostname: workstation
    path: /
    port: 80
  difficulty: basic
  timelimit: 6000
- slug: 03-deploy-apps
  id: sx6jl3i4ujsj
  type: challenge
  title: Deploy Applications
  notes:
  - type: text
    contents: |+
      The next challange we will start to deploy our applications

      Each service/app deployed will automtically register to Consul and

      Note: The entire process takes about 3-5min

  assignment: |-
    Let's deploy some apps

    NOTE: Make sure the panos have been booted and are "connected" within panorama

    In the 'Shell' tab, execute the following command to install Terraform:

    ```
    cd terraform/03-deploy-apps
    terraform init
    terraform plan
    terraform apply -auto-approve
    ```

    NOTE: To deploy the PANS it takes about 5 mintues.

    Let's explore the configuration.. here is an

    While your waiting, you can log into the CONSUL Server to verify the applications are being registered.
  tabs:
  - title: Lab Overview
    type: website
    url: https://htmlpreview.github.io/?https://raw.githubusercontent.com/maniak-academy/instruqt-demos/blob/main/panorama-nia-cts/assets/images/env.html
  - title: Terraform Code
    type: code
    hostname: workstation
    path: /root/terraform/03-deploy-apps
  - title: Shell
    type: terminal
    hostname: workstation
  - title: Cloud Consoles
    type: service
    hostname: workstation
    path: /
    port: 80
  difficulty: basic
  timelimit: 6000
- slug: 04-azure-network-automation
  id: 310ge6rusmnh
  type: challenge
  title: Deploy and Enable CTS
  notes:
  - type: text
    contents: |
      The next challange we will deploy Consul Terraform Sync.

      Once CTS starts it will register it self with consul and kick of the desired tasks.
  assignment: |-
    Let's build and deploy CTS in our environment

    In the 'Shell' tab, execute the following command to install Terraform:

    ```
    cd terraform/04-azure-network-automation/
    terraform init
    terraform plan
    terraform apply -auto-approve
    ```

    In the same shell log into the CTS server with the output that was provided.

    ```
    ssh -i cts.pem azureuser@$<ip from your output>
    ````

    Once you've SSH'd into the machine execute the following code to see logs/changes occur as we increase and decrease the environment...

    ```
    sudo journalctl -u consul-tf-sync -f
    ````

    Log into the PANORAMA / or your PAN-OS Device and valiadte that there are registered servers in Dynamic Object list on the PAN OS. NOTE you will need to go to Dashbaord > and under Panaorama select your device.


    Next the challange is to increase the web and app count so you can see that happens in your CTS server and Panorama


    Jump into `Terraform Code 2' to increase some web and app count from 2 to 3. MAKE SURE to Save the config


    ```
    variable "web_count" {
        default = "3"
    }
    variable "app_count" {
        default = "3"
    }
    ```

    After you've saved the configuration, just into 'Shell 2' apply the terraform code

    ```
    cd /root/terraform/03-deploy-apps
    terraform apply
    ```


    Play around in the environment we have built for you.
  tabs:
  - title: Lab Overview
    type: website
    url: https://htmlpreview.github.io/?https://raw.githubusercontent.com/maniak-academy/instruqt-demos/blob/main/panorama-nia-cts/assets/images/env.html
  - title: Terraform Code
    type: code
    hostname: workstation
    path: /root/terraform/04-azure-network-automation
  - title: Terraform Code 2
    type: code
    hostname: workstation
    path: /root/terraform/03-deploy-apps
  - title: Shell
    type: terminal
    hostname: workstation
  - title: Shell 2
    type: terminal
    hostname: workstation
  - title: Cloud Consoles
    type: service
    hostname: workstation
    path: /
    port: 80
  difficulty: basic
  timelimit: 6000
checksum: "449299576553811585"
